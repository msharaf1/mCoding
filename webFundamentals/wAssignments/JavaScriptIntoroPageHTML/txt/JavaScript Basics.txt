JavaScript variables are containers for storing data values - imagine a cup you fill with coffee, the cup holds the coffee, a variable holds a value. All JavaScript variables must be identified with unique names. These unique names are called identifiers. <span> var x; </span>

Assignment operators assign values to JavaScript variables - our cup can now have coffee poured in it, giving our variable a value to hold. The assignment operator assigns a value to a variable. <span> var x = 10;

Data Types are an important concept; to be able to operate on variables you need to know the data type. There are six data types that are JavaScript primitives: Boolean - <span>true</span> or <span>false;</span> null - <span>null<span> aka nothing; Number - <span>42</span> or <span>3.14159;</span> String - <span>"Coding Dojo Rocks!";</span> Array -<span>[1, 'Coding',2,'Dojo']; </span> and Object - <span> {first_name: 'Jane',last_name:'Doe'}</span>

When you write code, you want to perform different actions for different decisions - hitting different code blocks based on values or conditions that have been met. You can use conditional statements in your code to accomplish this. There are the following conditional statements: <span> if</span> a specified condition is true, do this code in our code block; <span> else if</span> to specify a new condition to test, if the first condition is false; <span>else</span> we execute this block of code;

There are many different kinds of loops in a every programming language, but they all essentially do the same thing: they will repeat an action some number of times. Imagine you have to run a mile, well you run around the track four times and then you stop. Thats a loop!

Functions are an encapsulation of a code block. When we call our function this will run that code block. Think of it as a list of instructions. As an example imagine we are putting together a desk from Ikea, we open up the instruction manual and get started, first we screw the legs to the table top; next we place the table the right way up. Done! We finished our instructions. Sadly there are ton more tables to d so lets call our function over and over and over agains.
